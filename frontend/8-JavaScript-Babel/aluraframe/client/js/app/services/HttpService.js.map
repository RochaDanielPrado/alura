{"version":3,"sources":["../../app-es6/services/HttpService.js"],"names":["HttpService","res","ok","Error","statusText","url","fetch","then","_handleErrors","json","dado","headers","method","body","JSON","stringify"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mCAAaA,W;;;;;;;kDAEKC,G,EAAK;;AAEf,4BAAI,CAACA,IAAIC,EAAT,EAAa,MAAM,IAAIC,KAAJ,CAAUF,IAAIG,UAAd,CAAN;AACb,+BAAOH,GAAP;AACH;;;wCAEGI,G,EAAK;AAAA;;AAEL,+BAAOC,MAAMD,GAAN,EACFE,IADE,CACG;AAAA,mCAAO,MAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,yBADH,EAEFM,IAFE,CAEG;AAAA,mCAAON,IAAIQ,IAAJ,EAAP;AAAA,yBAFH,CAAP;;AAIA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACH;;;yCAEIJ,G,EAAKK,I,EAAM;AAAA;;AAEZ,+BAAOJ,MAAMD,GAAN,EAAW;AACdM,qCAAS,EAAE,gBAAgB,kBAAlB,EADK;AAEdC,oCAAQ,MAFM;AAGdC,kCAAMC,KAAKC,SAAL,CAAeL,IAAf;AAHQ,yBAAX,EAKFH,IALE,CAKG;AAAA,mCAAO,OAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,yBALH,CAAP;;AAOA;;;;;;;;;;;;;;;AAoBH","file":"HttpService.js","sourcesContent":["export class HttpService {\n\n    _handleErrors(res) {\n\n        if (!res.ok) throw new Error(res.statusText);\n        return res;\n    }\n\n    get(url) {\n\n        return fetch(url)\n            .then(res => this._handleErrors(res))\n            .then(res => res.json())\n\n        // return new Promise((resolve, reject) => {\n        //     let xhr = new XMLHttpRequest();\n\n        //     xhr.open(`GET`, url);\n\n        //     /* Configurações Prévias\n\n        //     0: requisição ainda não iniciada\n\n        //     1: conexão com o servidor estabelecida\n\n        //     2: requisição recebida\n\n        //     3: processando requisição\n\n        //     4: requisição está concluída e a resposta está pronta\n        //     */\n\n        //     xhr.onreadystatechange = () => {\n\n        //         if (xhr.readyState == 4) {\n\n        //             if (xhr.status == 200) {\n\n        //                 resolve(JSON.parse(xhr.responseText));\n\n        //             } else {\n\n        //                 reject(xhr.responseText);\n\n        //             }\n\n        //         }\n        //     };\n\n        //     xhr.send();\n\n        // })\n    }\n\n    post(url, dado) {\n\n        return fetch(url, {\n            headers: { \"Content-type\": \"application/json\" },\n            method: \"post\",\n            body: JSON.stringify(dado)\n        })\n            .then(res => this._handleErrors(res))\n\n        /* return new Promise((resolve, reject) => {\n\n            let xhr = new XMLHttpRequest();\n            xhr.open(\"POST\", url, true);\n            xhr.setRequestHeader(\"Content-type\", \"application/json\");\n            xhr.onreadystatechange = () => {\n\n                if (xhr.readyState == 4) {\n\n                    if (xhr.status == 200) {\n\n                        resolve(JSON.parse(xhr.responseText));\n                    } else {\n\n                        reject(xhr.responseText);\n                    }\n                }\n            };\n            xhr.send(JSON.stringify(dado)); // usando JSON.stringifly para converter objeto em uma string no formato JSON.\n        });*/\n    }\n}"]}